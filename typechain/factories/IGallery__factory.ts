/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IGallery, IGalleryInterface } from "../IGallery";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_canvasName",
        type: "string",
      },
    ],
    name: "getFinishedArt",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "dimentsionX",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "dimentsionY",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "totalNumberOfShares",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "value",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "x",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "y",
                type: "uint32",
              },
              {
                internalType: "address[]",
                name: "artists",
                type: "address[]",
              },
              {
                internalType: "uint32[]",
                name: "allValues",
                type: "uint32[]",
              },
            ],
            internalType: "struct Pixel[]",
            name: "pixels",
            type: "tuple[]",
          },
        ],
        internalType: "struct Art",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_canvasName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getShares",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_canvasName",
        type: "string",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_canvasName",
        type: "string",
      },
    ],
    name: "hasFinishedCanvas",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_canvasName",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "_quantity",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "transferShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IGallery__factory {
  static readonly abi = _abi;
  static createInterface(): IGalleryInterface {
    return new utils.Interface(_abi) as IGalleryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGallery {
    return new Contract(address, _abi, signerOrProvider) as IGallery;
  }
}
