/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SharedNFT, SharedNFTInterface } from "../SharedNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_nft",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103ab3803806103ab8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b60008151905061008781610103565b92915050565b6000602082840312156100a3576100a26100fe565b5b60006100b184828501610078565b91505092915050565b60006100c5826100de565b9050919050565b60006100d7826100ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61010c816100cc565b811461011757600080fd5b50565b610282806101296000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a600480360381019061004591906100eb565b610060565b6040516100579190610182565b60405180910390f35b600095945050505050565b60008135905061007a8161021e565b92915050565b60008083601f8401126100965761009561020a565b5b8235905067ffffffffffffffff8111156100b3576100b2610205565b5b6020830191508360018202830111156100cf576100ce61020f565b5b9250929050565b6000813590506100e581610235565b92915050565b60008060008060006080868803121561010757610106610219565b5b60006101158882890161006b565b95505060206101268882890161006b565b9450506040610137888289016100d6565b935050606086013567ffffffffffffffff81111561015857610157610214565b5b61016488828901610080565b92509250509295509295909350565b61017c816101af565b82525050565b60006020820190506101976000830184610173565b92915050565b60006101a8826101db565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6102278161019d565b811461023257600080fd5b50565b61023e816101fb565b811461024957600080fd5b5056fea26469706673582212209264bfaac866532a5970b9cd110d8ba8ddbab81d9c4bfa982b24ea6d92e2d36764736f6c63430008060033";

export class SharedNFT__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _nft: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SharedNFT> {
    return super.deploy(_nft, overrides || {}) as Promise<SharedNFT>;
  }
  getDeployTransaction(
    _nft: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nft, overrides || {});
  }
  attach(address: string): SharedNFT {
    return super.attach(address) as SharedNFT;
  }
  connect(signer: Signer): SharedNFT__factory {
    return super.connect(signer) as SharedNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharedNFTInterface {
    return new utils.Interface(_abi) as SharedNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SharedNFT {
    return new Contract(address, _abi, signerOrProvider) as SharedNFT;
  }
}
